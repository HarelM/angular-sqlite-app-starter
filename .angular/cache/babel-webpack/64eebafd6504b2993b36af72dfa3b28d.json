{"ast":null,"code":"export const createSchema = `\nCREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    name TEXT,\n    company TEXT,\n    size REAL,\n    age INTEGER,\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n);\nCREATE TABLE IF NOT EXISTS messages (\n  id INTEGER PRIMARY KEY NOT NULL,\n  userid INTEGER,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  last_modified INTEGER DEFAULT (strftime('%s', 'now')),\n  FOREIGN KEY (userid) REFERENCES users(id) ON DELETE SET DEFAULT\n);\nCREATE TABLE IF NOT EXISTS images (\n  id INTEGER PRIMARY KEY NOT NULL,\n  name TEXT UNIQUE NOT NULL,\n  type TEXT NOT NULL,\n  size INTEGER,\n  img BLOB,\n  last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n);\nCREATE TABLE IF NOT EXISTS test56 (\n  id INTEGER PRIMARY KEY NOT NULL,\n  name TEXT,\n  name1 TEXT\n);\nCREATE INDEX IF NOT EXISTS users_index_name ON users (name);\nCREATE INDEX IF NOT EXISTS users_index_last_modified ON users (last_modified);\nCREATE INDEX IF NOT EXISTS messages_index_name ON messages (title);\nCREATE INDEX IF NOT EXISTS messages_index_last_modified ON messages (last_modified);\nCREATE INDEX IF NOT EXISTS images_index_name ON images (name);\nCREATE INDEX IF NOT EXISTS images_index_last_modified ON images (last_modified);\nCREATE TRIGGER IF NOT EXISTS users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER IF NOT EXISTS messages_trigger_last_modified\nAFTER UPDATE ON messages\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE messages SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER IF NOT EXISTS images_trigger_last_modified\nAFTER UPDATE ON images\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE images SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nPRAGMA user_version = 1;\n`; // Insert some Users\n\nconst row = [[\"Whiteley\", \"Whiteley.com\", 30.2], [\"Jones\", \"Jones.com\", 44]];\nexport const twoUsers = `\nINSERT INTO users (name,email,age) VALUES (\"${row[0][0]}\",\"${row[0][1]}\",${row[0][2]});\nINSERT INTO users (name,email,age) VALUES (\"${row[1][0]}\",\"${row[1][1]}\",${row[1][2]});\n`; // Insert some Tests issue#56\n\nexport const twoTests = `\nINSERT INTO test56 (name) VALUES (\"test 1\");\nINSERT INTO test56 (name) VALUES (\"test 2\");\n`;\nexport const setUsers = [{\n  statement: \"INSERT INTO users (name,email,company,size,age) VALUES (?,?,?,?,?);\",\n  values: [\"Jackson\", \"Jackson@example.com\", null, null, 18]\n}, {\n  statement: \"INSERT INTO users (name,email,age) VALUES (?,?,?);\",\n  values: [\"Kennedy\", \"Kennedy@example.com\", 25]\n}, {\n  statement: \"INSERT INTO users (name,email,company,size,age) VALUES (?,?,?,?,?);\",\n  values: [\"Bush\", \"Bush@example.com\", null, null, null]\n}];\nexport const createSchema82 = `\nCREATE TABLE IF NOT EXISTS drawings (\n  id TEXT PRIMARY KEY NOT NULL,\n  congregationId TEXT,\n  prefix TEXT,\n  creationTime TEXT NOT NULL,\n  lastUpdated TEXT,\n  featureCollection TEXT NOT NULL,\n  printConfiguration TEXT\n);\nPRAGMA drawings_version = 1;\n`;","map":null,"metadata":{},"sourceType":"module"}