{"ast":null,"code":"import _asyncToGenerator from \"/Users/queaujeanpierre/Development/latest/angular-sqlite-app-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./services/sqlite.service\";\nimport * as i3 from \"./services/detail.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction AppComponent_jeep_sqlite_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"jeep-sqlite\");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform, sqlite, detail) {\n      this.platform = platform;\n      this.sqlite = sqlite;\n      this.detail = detail;\n      this.isWeb = false;\n      this.initializeApp();\n    }\n\n    initializeApp() {\n      var _this = this;\n\n      this.platform.ready().then( /*#__PURE__*/_asyncToGenerator(function* () {\n        _this.detail.setExistingConnection(false);\n\n        _this.detail.setExportJson(false);\n\n        _this.sqlite.initializePlugin().then( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (ret) {\n            _this.initPlugin = ret;\n            const p = _this.sqlite.platform;\n            console.log(`plaform ${p}`);\n\n            if (p === \"web\") {\n              _this.isWeb = true;\n              yield customElements.whenDefined('jeep-sqlite');\n              const jeepSqliteEl = document.querySelector('jeep-sqlite');\n\n              if (jeepSqliteEl != null) {\n                yield _this.sqlite.initWebStore();\n                console.log(`isStoreOpen ${yield jeepSqliteEl.isStoreOpen()}`);\n                console.log(`$$ jeepSqliteEl is defined}`);\n              } else {\n                console.log('$$ jeepSqliteEl is null');\n              }\n            }\n\n            try {\n              console.log(`going to create a connection`);\n              const db = yield _this.sqlite.createConnection(\"db_issue9\", false, \"no-encryption\", 1);\n              console.log(`db ${JSON.stringify(db)}`);\n              yield db.open();\n              console.log(`after db.open`);\n              let query = `\n          CREATE TABLE IF NOT EXISTS test (\n            id INTEGER PRIMARY KEY NOT NULL,\n            name TEXT NOT NULL\n          );\n          `;\n              console.log(`query ${query}`);\n              const res = yield db.execute(query);\n              console.log(`res: ${JSON.stringify(res)}`);\n              yield db.close();\n              console.log(`after db.close`);\n            } catch (err) {\n              console.log(`Error: ${err}`);\n              _this.initPlugin = false;\n            }\n\n            console.log(\">>>> in App  this.initPlugin \" + _this.initPlugin);\n          });\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      }));\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.SQLiteService), i0.ɵɵdirectiveInject(i3.DetailService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵtemplate(2, AppComponent_jeep_sqlite_2_Template, 1, 0, \"jeep-sqlite\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isWeb);\n      }\n    },\n    directives: [i1.IonApp, i1.IonRouterOutlet, i4.NgIf],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}